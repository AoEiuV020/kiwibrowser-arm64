// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/device/bluetooth/Wrappers

#ifndef org_chromium_device_bluetooth_Wrappers_JNI
#define org_chromium_device_bluetooth_Wrappers_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_device_bluetooth_Wrappers[];
const char kClassPath_org_chromium_device_bluetooth_Wrappers[] =
    "org/chromium/device/bluetooth/Wrappers";

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper[];
const char kClassPath_org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper[] =
    "org/chromium/device/bluetooth/Wrappers$BluetoothAdapterWrapper";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord g_org_chromium_device_bluetooth_Wrappers_clazz = 0;
#ifndef org_chromium_device_bluetooth_Wrappers_clazz_defined
#define org_chromium_device_bluetooth_Wrappers_clazz_defined
inline jclass org_chromium_device_bluetooth_Wrappers_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_device_bluetooth_Wrappers,
      &g_org_chromium_device_bluetooth_Wrappers_clazz);
}
#endif
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz = 0;
#ifndef org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz_defined
#define org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz_defined
inline jclass org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper,
      &g_org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace device {


static base::subtle::AtomicWord
    g_org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_createWithDefaultAdapter =
    0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_BluetoothAdapterWrapper_createWithDefaultAdapter(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz(env),
      org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz(env),
          "createWithDefaultAdapter",
          "()Lorg/chromium/device/bluetooth/Wrappers$BluetoothAdapterWrapper;",
&g_org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_createWithDefaultAdapter);

  jobject ret =
env->CallStaticObjectMethod(org_chromium_device_bluetooth_Wrappers_00024BluetoothAdapterWrapper_clazz(env),
          method_id);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace device

#endif  // org_chromium_device_bluetooth_Wrappers_JNI
