// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/ui/resources/ResourceFactory

#ifndef org_chromium_ui_resources_ResourceFactory_JNI
#define org_chromium_ui_resources_ResourceFactory_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_ui_resources_ResourceFactory[];
const char kClassPath_org_chromium_ui_resources_ResourceFactory[] =
    "org/chromium/ui/resources/ResourceFactory";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord g_org_chromium_ui_resources_ResourceFactory_clazz =
    0;
#ifndef org_chromium_ui_resources_ResourceFactory_clazz_defined
#define org_chromium_ui_resources_ResourceFactory_clazz_defined
inline jclass org_chromium_ui_resources_ResourceFactory_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_ui_resources_ResourceFactory,
      &g_org_chromium_ui_resources_ResourceFactory_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace ui {

static jlong JNI_ResourceFactory_CreateBitmapResource(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_ui_resources_ResourceFactory_nativeCreateBitmapResource(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_ResourceFactory_CreateBitmapResource(env, base::android::JavaParamRef<jclass>(env,
      jcaller));
}

static jlong JNI_ResourceFactory_CreateNinePatchBitmapResource(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jint paddingLeft,
    jint paddingTop,
    jint paddingRight,
    jint paddingBottom,
    jint apertureLeft,
    jint apertureTop,
    jint apertureRight,
    jint apertureBottom);

JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_ui_resources_ResourceFactory_nativeCreateNinePatchBitmapResource(
    JNIEnv* env,
    jclass jcaller,
    jint paddingLeft,
    jint paddingTop,
    jint paddingRight,
    jint paddingBottom,
    jint apertureLeft,
    jint apertureTop,
    jint apertureRight,
    jint apertureBottom) {
  return JNI_ResourceFactory_CreateNinePatchBitmapResource(env,
      base::android::JavaParamRef<jclass>(env, jcaller), paddingLeft, paddingTop, paddingRight,
      paddingBottom, apertureLeft, apertureTop, apertureRight, apertureBottom);
}


}  // namespace ui

#endif  // org_chromium_ui_resources_ResourceFactory_JNI
