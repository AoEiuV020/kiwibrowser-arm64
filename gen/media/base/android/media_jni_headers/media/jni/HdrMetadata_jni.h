// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/media/HdrMetadata

#ifndef org_chromium_media_HdrMetadata_JNI
#define org_chromium_media_HdrMetadata_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_media_HdrMetadata[];
const char kClassPath_org_chromium_media_HdrMetadata[] = "org/chromium/media/HdrMetadata";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord g_org_chromium_media_HdrMetadata_clazz = 0;
#ifndef org_chromium_media_HdrMetadata_clazz_defined
#define org_chromium_media_HdrMetadata_clazz_defined
inline jclass org_chromium_media_HdrMetadata_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_media_HdrMetadata,
      &g_org_chromium_media_HdrMetadata_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace media {

JNI_GENERATOR_EXPORT jint Java_org_chromium_media_HdrMetadata_nativePrimaries(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "Primaries", 0);
  return native->Primaries(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jint Java_org_chromium_media_HdrMetadata_nativeColorTransfer(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "ColorTransfer", 0);
  return native->ColorTransfer(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jint Java_org_chromium_media_HdrMetadata_nativeRange(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "Range", 0);
  return native->Range(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityX(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "PrimaryRChromaticityX", 0);
  return native->PrimaryRChromaticityX(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativePrimaryRChromaticityY(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "PrimaryRChromaticityY", 0);
  return native->PrimaryRChromaticityY(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityX(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "PrimaryGChromaticityX", 0);
  return native->PrimaryGChromaticityX(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativePrimaryGChromaticityY(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "PrimaryGChromaticityY", 0);
  return native->PrimaryGChromaticityY(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityX(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "PrimaryBChromaticityX", 0);
  return native->PrimaryBChromaticityX(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativePrimaryBChromaticityY(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "PrimaryBChromaticityY", 0);
  return native->PrimaryBChromaticityY(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityX(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "WhitePointChromaticityX", 0);
  return native->WhitePointChromaticityX(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativeWhitePointChromaticityY(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "WhitePointChromaticityY", 0);
  return native->WhitePointChromaticityY(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativeMaxMasteringLuminance(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "MaxMasteringLuminance", 0);
  return native->MaxMasteringLuminance(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jfloat Java_org_chromium_media_HdrMetadata_nativeMinMasteringLuminance(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "MinMasteringLuminance", 0);
  return native->MinMasteringLuminance(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jint Java_org_chromium_media_HdrMetadata_nativeMaxContentLuminance(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "MaxContentLuminance", 0);
  return native->MaxContentLuminance(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT jint Java_org_chromium_media_HdrMetadata_nativeMaxFrameAverageLuminance(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeJniHdrMetadata) {
  JniHdrMetadata* native = reinterpret_cast<JniHdrMetadata*>(nativeJniHdrMetadata);
  CHECK_NATIVE_PTR(env, jcaller, native, "MaxFrameAverageLuminance", 0);
  return native->MaxFrameAverageLuminance(env, base::android::JavaParamRef<jobject>(env, jcaller));
}


static base::subtle::AtomicWord g_org_chromium_media_HdrMetadata_create = 0;
static base::android::ScopedJavaLocalRef<jobject> Java_HdrMetadata_create(JNIEnv* env, jlong
    nativeRef) {
  CHECK_CLAZZ(env, org_chromium_media_HdrMetadata_clazz(env),
      org_chromium_media_HdrMetadata_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_media_HdrMetadata_clazz(env),
          "create",
          "(J)Lorg/chromium/media/HdrMetadata;",
          &g_org_chromium_media_HdrMetadata_create);

  jobject ret =
      env->CallStaticObjectMethod(org_chromium_media_HdrMetadata_clazz(env),
          method_id, nativeRef);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_org_chromium_media_HdrMetadata_close = 0;
static void Java_HdrMetadata_close(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_media_HdrMetadata_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_media_HdrMetadata_clazz(env),
          "close",
          "()V",
          &g_org_chromium_media_HdrMetadata_close);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
}

}  // namespace media

#endif  // org_chromium_media_HdrMetadata_JNI
