// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/MemoryMonitorAndroid

#ifndef org_chromium_content_browser_MemoryMonitorAndroid_JNI
#define org_chromium_content_browser_MemoryMonitorAndroid_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_MemoryMonitorAndroid[];
const char kClassPath_org_chromium_content_browser_MemoryMonitorAndroid[] =
    "org/chromium/content/browser/MemoryMonitorAndroid";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_content_browser_MemoryMonitorAndroid_clazz = 0;
#ifndef org_chromium_content_browser_MemoryMonitorAndroid_clazz_defined
#define org_chromium_content_browser_MemoryMonitorAndroid_clazz_defined
inline jclass org_chromium_content_browser_MemoryMonitorAndroid_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_browser_MemoryMonitorAndroid,
      &g_org_chromium_content_browser_MemoryMonitorAndroid_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

static void JNI_MemoryMonitorAndroid_GetMemoryInfoCallback(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jlong availMem,
    jboolean lowMemory,
    jlong threshold,
    jlong totalMem,
    jlong outPtr);

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeGetMemoryInfoCallback(
    JNIEnv* env,
    jclass jcaller,
    jlong availMem,
    jboolean lowMemory,
    jlong threshold,
    jlong totalMem,
    jlong outPtr) {
  return JNI_MemoryMonitorAndroid_GetMemoryInfoCallback(env,
      base::android::JavaParamRef<jclass>(env, jcaller), availMem, lowMemory, threshold, totalMem,
      outPtr);
}

static void JNI_MemoryMonitorAndroid_OnTrimMemory(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jint level);

JNI_GENERATOR_EXPORT void Java_org_chromium_content_browser_MemoryMonitorAndroid_nativeOnTrimMemory(
    JNIEnv* env,
    jclass jcaller,
    jint level) {
  return JNI_MemoryMonitorAndroid_OnTrimMemory(env, base::android::JavaParamRef<jclass>(env,
      jcaller), level);
}


static base::subtle::AtomicWord g_org_chromium_content_browser_MemoryMonitorAndroid_getMemoryInfo =
    0;
static void Java_MemoryMonitorAndroid_getMemoryInfo(JNIEnv* env, jlong outPtr) {
  CHECK_CLAZZ(env, org_chromium_content_browser_MemoryMonitorAndroid_clazz(env),
      org_chromium_content_browser_MemoryMonitorAndroid_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_MemoryMonitorAndroid_clazz(env),
          "getMemoryInfo",
          "(J)V",
          &g_org_chromium_content_browser_MemoryMonitorAndroid_getMemoryInfo);

     env->CallStaticVoidMethod(org_chromium_content_browser_MemoryMonitorAndroid_clazz(env),
          method_id, outPtr);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_MemoryMonitorAndroid_registerComponentCallbacks = 0;
static void Java_MemoryMonitorAndroid_registerComponentCallbacks(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_content_browser_MemoryMonitorAndroid_clazz(env),
      org_chromium_content_browser_MemoryMonitorAndroid_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_MemoryMonitorAndroid_clazz(env),
          "registerComponentCallbacks",
          "()V",
          &g_org_chromium_content_browser_MemoryMonitorAndroid_registerComponentCallbacks);

     env->CallStaticVoidMethod(org_chromium_content_browser_MemoryMonitorAndroid_clazz(env),
          method_id);
  jni_generator::CheckException(env);
}

}  // namespace content

#endif  // org_chromium_content_browser_MemoryMonitorAndroid_JNI
