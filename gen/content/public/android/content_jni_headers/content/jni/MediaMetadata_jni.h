// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content_public/common/MediaMetadata

#ifndef org_chromium_content_public_common_MediaMetadata_JNI
#define org_chromium_content_public_common_MediaMetadata_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_1public_common_MediaMetadata[];
const char kClassPath_org_chromium_content_1public_common_MediaMetadata[] =
    "org/chromium/content_public/common/MediaMetadata";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_content_1public_common_MediaMetadata_clazz = 0;
#ifndef org_chromium_content_1public_common_MediaMetadata_clazz_defined
#define org_chromium_content_1public_common_MediaMetadata_clazz_defined
inline jclass org_chromium_content_1public_common_MediaMetadata_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_1public_common_MediaMetadata,
      &g_org_chromium_content_1public_common_MediaMetadata_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {


static base::subtle::AtomicWord
    g_org_chromium_content_1public_common_MediaMetadata_createAndAddMediaImage = 0;
static void Java_MediaMetadata_createAndAddMediaImage(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& src,
    const base::android::JavaRef<jstring>& type,
    const base::android::JavaRef<jintArray>& flattenedSizes) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_1public_common_MediaMetadata_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_1public_common_MediaMetadata_clazz(env),
          "createAndAddMediaImage",
          "(Ljava/lang/String;Ljava/lang/String;[I)V",
          &g_org_chromium_content_1public_common_MediaMetadata_createAndAddMediaImage);

     env->CallVoidMethod(obj.obj(),
          method_id, src.obj(), type.obj(), flattenedSizes.obj());
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_org_chromium_content_1public_common_MediaMetadata_create = 0;
static base::android::ScopedJavaLocalRef<jobject> Java_MediaMetadata_create(JNIEnv* env, const
    base::android::JavaRef<jstring>& title,
    const base::android::JavaRef<jstring>& artist,
    const base::android::JavaRef<jstring>& album) {
  CHECK_CLAZZ(env, org_chromium_content_1public_common_MediaMetadata_clazz(env),
      org_chromium_content_1public_common_MediaMetadata_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_1public_common_MediaMetadata_clazz(env),
          "create",
"(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/chromium/content_public/common/MediaMetadata;",
          &g_org_chromium_content_1public_common_MediaMetadata_create);

  jobject ret =
      env->CallStaticObjectMethod(org_chromium_content_1public_common_MediaMetadata_clazz(env),
          method_id, title.obj(), artist.obj(), album.obj());
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace content

#endif  // org_chromium_content_public_common_MediaMetadata_JNI
