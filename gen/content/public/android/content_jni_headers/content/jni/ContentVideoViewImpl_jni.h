// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/ContentVideoViewImpl

#ifndef org_chromium_content_browser_ContentVideoViewImpl_JNI
#define org_chromium_content_browser_ContentVideoViewImpl_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_ContentVideoViewImpl[];
const char kClassPath_org_chromium_content_browser_ContentVideoViewImpl[] =
    "org/chromium/content/browser/ContentVideoViewImpl";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_content_browser_ContentVideoViewImpl_clazz = 0;
#ifndef org_chromium_content_browser_ContentVideoViewImpl_clazz_defined
#define org_chromium_content_browser_ContentVideoViewImpl_clazz_defined
inline jclass org_chromium_content_browser_ContentVideoViewImpl_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_browser_ContentVideoViewImpl,
      &g_org_chromium_content_browser_ContentVideoViewImpl_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

static base::android::ScopedJavaLocalRef<jobject>
    JNI_ContentVideoViewImpl_GetSingletonJavaContentVideoView(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller);

JNI_GENERATOR_EXPORT jobject
    Java_org_chromium_content_browser_ContentVideoViewImpl_nativeGetSingletonJavaContentVideoView(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_ContentVideoViewImpl_GetSingletonJavaContentVideoView(env,
      base::android::JavaParamRef<jclass>(env, jcaller)).Release();
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_ContentVideoViewImpl_nativeDidExitFullscreen(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeContentVideoView,
    jboolean releaseMediaPlayer) {
  ContentVideoView* native = reinterpret_cast<ContentVideoView*>(nativeContentVideoView);
  CHECK_NATIVE_PTR(env, jcaller, native, "DidExitFullscreen");
  return native->DidExitFullscreen(env, base::android::JavaParamRef<jobject>(env, jcaller),
      releaseMediaPlayer);
}

JNI_GENERATOR_EXPORT void Java_org_chromium_content_browser_ContentVideoViewImpl_nativeSetSurface(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeContentVideoView,
    jobject surface) {
  ContentVideoView* native = reinterpret_cast<ContentVideoView*>(nativeContentVideoView);
  CHECK_NATIVE_PTR(env, jcaller, native, "SetSurface");
  return native->SetSurface(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, surface));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_ContentVideoViewImpl_nativeRecordFullscreenPlayback(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeContentVideoView,
    jboolean isVideoPortrait,
    jboolean isOrientationPortrait) {
  ContentVideoView* native = reinterpret_cast<ContentVideoView*>(nativeContentVideoView);
  CHECK_NATIVE_PTR(env, jcaller, native, "RecordFullscreenPlayback");
  return native->RecordFullscreenPlayback(env, base::android::JavaParamRef<jobject>(env, jcaller),
      isVideoPortrait, isOrientationPortrait);
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_ContentVideoViewImpl_nativeRecordExitFullscreenPlayback(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeContentVideoView,
    jboolean isOrientationPortrait,
    jlong playbackDurationBeforeOrientationChange,
    jlong playbackDurationAfterOrientationChange) {
  ContentVideoView* native = reinterpret_cast<ContentVideoView*>(nativeContentVideoView);
  CHECK_NATIVE_PTR(env, jcaller, native, "RecordExitFullscreenPlayback");
  return native->RecordExitFullscreenPlayback(env, base::android::JavaParamRef<jobject>(env,
      jcaller), isOrientationPortrait, playbackDurationBeforeOrientationChange,
      playbackDurationAfterOrientationChange);
}


static base::subtle::AtomicWord
    g_org_chromium_content_browser_ContentVideoViewImpl_onMediaPlayerError = 0;
static void Java_ContentVideoViewImpl_onMediaPlayerError(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper errorType) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_ContentVideoViewImpl_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_ContentVideoViewImpl_clazz(env),
          "onMediaPlayerError",
          "(I)V",
          &g_org_chromium_content_browser_ContentVideoViewImpl_onMediaPlayerError);

     env->CallVoidMethod(obj.obj(),
          method_id, as_jint(errorType));
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_ContentVideoViewImpl_onVideoSizeChanged = 0;
static void Java_ContentVideoViewImpl_onVideoSizeChanged(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper width,
    JniIntWrapper height) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_ContentVideoViewImpl_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_ContentVideoViewImpl_clazz(env),
          "onVideoSizeChanged",
          "(II)V",
          &g_org_chromium_content_browser_ContentVideoViewImpl_onVideoSizeChanged);

     env->CallVoidMethod(obj.obj(),
          method_id, as_jint(width), as_jint(height));
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_org_chromium_content_browser_ContentVideoViewImpl_openVideo = 0;
static void Java_ContentVideoViewImpl_openVideo(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_ContentVideoViewImpl_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_ContentVideoViewImpl_clazz(env),
          "openVideo",
          "()V",
          &g_org_chromium_content_browser_ContentVideoViewImpl_openVideo);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_ContentVideoViewImpl_createContentVideoView = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_ContentVideoViewImpl_createContentVideoView(JNIEnv* env, const
    base::android::JavaRef<jobject>& webContents,
    const base::android::JavaRef<jobject>& embedder,
    jlong nativeContentVideoView,
    JniIntWrapper videoWidth,
    JniIntWrapper videoHeight) {
  CHECK_CLAZZ(env, org_chromium_content_browser_ContentVideoViewImpl_clazz(env),
      org_chromium_content_browser_ContentVideoViewImpl_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_ContentVideoViewImpl_clazz(env),
          "createContentVideoView",
"(Lorg/chromium/content_public/browser/WebContents;Lorg/chromium/content_public/browser/ContentVideoViewEmbedder;JII)Lorg/chromium/content/browser/ContentVideoViewImpl;",
          &g_org_chromium_content_browser_ContentVideoViewImpl_createContentVideoView);

  jobject ret =
      env->CallStaticObjectMethod(org_chromium_content_browser_ContentVideoViewImpl_clazz(env),
          method_id, webContents.obj(), embedder.obj(), nativeContentVideoView, as_jint(videoWidth),
              as_jint(videoHeight));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord g_org_chromium_content_browser_ContentVideoViewImpl_exitFullscreen =
    0;
static void Java_ContentVideoViewImpl_exitFullscreen(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean releaseMediaPlayer) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_ContentVideoViewImpl_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_ContentVideoViewImpl_clazz(env),
          "exitFullscreen",
          "(Z)V",
          &g_org_chromium_content_browser_ContentVideoViewImpl_exitFullscreen);

     env->CallVoidMethod(obj.obj(),
          method_id, releaseMediaPlayer);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_ContentVideoViewImpl_destroyContentVideoView = 0;
static void Java_ContentVideoViewImpl_destroyContentVideoView(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jboolean nativeViewDestroyed) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_ContentVideoViewImpl_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_ContentVideoViewImpl_clazz(env),
          "destroyContentVideoView",
          "(Z)V",
          &g_org_chromium_content_browser_ContentVideoViewImpl_destroyContentVideoView);

     env->CallVoidMethod(obj.obj(),
          method_id, nativeViewDestroyed);
  jni_generator::CheckException(env);
}

}  // namespace content

#endif  // org_chromium_content_browser_ContentVideoViewImpl_JNI
