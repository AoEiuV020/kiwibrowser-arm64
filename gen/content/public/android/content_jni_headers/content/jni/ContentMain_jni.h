// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/app/ContentMain

#ifndef org_chromium_content_app_ContentMain_JNI
#define org_chromium_content_app_ContentMain_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_org_chromium_content_app_ContentMain[];
const char kClassPath_org_chromium_content_app_ContentMain[] =
    "org/chromium/content/app/ContentMain";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord g_org_chromium_content_app_ContentMain_clazz = 0;
#ifndef org_chromium_content_app_ContentMain_clazz_defined
#define org_chromium_content_app_ContentMain_clazz_defined
inline jclass org_chromium_content_app_ContentMain_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_content_app_ContentMain,
      &g_org_chromium_content_app_ContentMain_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

static jint JNI_ContentMain_Start(JNIEnv* env, const base::android::JavaParamRef<jclass>& jcaller);

JNI_GENERATOR_EXPORT jint Java_org_chromium_content_app_ContentMain_nativeStart(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_ContentMain_Start(env, base::android::JavaParamRef<jclass>(env, jcaller));
}


}  // namespace content

#endif  // org_chromium_content_app_ContentMain_JNI
