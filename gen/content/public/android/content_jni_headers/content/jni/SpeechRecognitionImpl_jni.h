// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/SpeechRecognitionImpl

#ifndef org_chromium_content_browser_SpeechRecognitionImpl_JNI
#define org_chromium_content_browser_SpeechRecognitionImpl_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_SpeechRecognitionImpl[];
const char kClassPath_org_chromium_content_browser_SpeechRecognitionImpl[] =
    "org/chromium/content/browser/SpeechRecognitionImpl";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_content_browser_SpeechRecognitionImpl_clazz = 0;
#ifndef org_chromium_content_browser_SpeechRecognitionImpl_clazz_defined
#define org_chromium_content_browser_SpeechRecognitionImpl_clazz_defined
inline jclass org_chromium_content_browser_SpeechRecognitionImpl_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_browser_SpeechRecognitionImpl,
      &g_org_chromium_content_browser_SpeechRecognitionImpl_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_SpeechRecognitionImpl_nativeOnAudioStart(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeSpeechRecognizerImplAndroid) {
  SpeechRecognizerImplAndroid* native =
      reinterpret_cast<SpeechRecognizerImplAndroid*>(nativeSpeechRecognizerImplAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnAudioStart");
  return native->OnAudioStart(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_SpeechRecognitionImpl_nativeOnSoundStart(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeSpeechRecognizerImplAndroid) {
  SpeechRecognizerImplAndroid* native =
      reinterpret_cast<SpeechRecognizerImplAndroid*>(nativeSpeechRecognizerImplAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSoundStart");
  return native->OnSoundStart(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT void Java_org_chromium_content_browser_SpeechRecognitionImpl_nativeOnSoundEnd(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeSpeechRecognizerImplAndroid) {
  SpeechRecognizerImplAndroid* native =
      reinterpret_cast<SpeechRecognizerImplAndroid*>(nativeSpeechRecognizerImplAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSoundEnd");
  return native->OnSoundEnd(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT void Java_org_chromium_content_browser_SpeechRecognitionImpl_nativeOnAudioEnd(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeSpeechRecognizerImplAndroid) {
  SpeechRecognizerImplAndroid* native =
      reinterpret_cast<SpeechRecognizerImplAndroid*>(nativeSpeechRecognizerImplAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnAudioEnd");
  return native->OnAudioEnd(env, base::android::JavaParamRef<jobject>(env, jcaller));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_SpeechRecognitionImpl_nativeOnRecognitionResults(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeSpeechRecognizerImplAndroid,
    jobjectArray results,
    jfloatArray scores,
    jboolean provisional) {
  SpeechRecognizerImplAndroid* native =
      reinterpret_cast<SpeechRecognizerImplAndroid*>(nativeSpeechRecognizerImplAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRecognitionResults");
  return native->OnRecognitionResults(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobjectArray>(env, results),
      base::android::JavaParamRef<jfloatArray>(env, scores), provisional);
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_SpeechRecognitionImpl_nativeOnRecognitionError(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeSpeechRecognizerImplAndroid,
    jint error) {
  SpeechRecognizerImplAndroid* native =
      reinterpret_cast<SpeechRecognizerImplAndroid*>(nativeSpeechRecognizerImplAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRecognitionError");
  return native->OnRecognitionError(env, base::android::JavaParamRef<jobject>(env, jcaller), error);
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_SpeechRecognitionImpl_nativeOnRecognitionEnd(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeSpeechRecognizerImplAndroid) {
  SpeechRecognizerImplAndroid* native =
      reinterpret_cast<SpeechRecognizerImplAndroid*>(nativeSpeechRecognizerImplAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnRecognitionEnd");
  return native->OnRecognitionEnd(env, base::android::JavaParamRef<jobject>(env, jcaller));
}


static base::subtle::AtomicWord
    g_org_chromium_content_browser_SpeechRecognitionImpl_createSpeechRecognition = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_SpeechRecognitionImpl_createSpeechRecognition(JNIEnv* env, jlong
    nativeSpeechRecognizerImplAndroid) {
  CHECK_CLAZZ(env, org_chromium_content_browser_SpeechRecognitionImpl_clazz(env),
      org_chromium_content_browser_SpeechRecognitionImpl_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_SpeechRecognitionImpl_clazz(env),
          "createSpeechRecognition",
          "(J)Lorg/chromium/content/browser/SpeechRecognitionImpl;",
          &g_org_chromium_content_browser_SpeechRecognitionImpl_createSpeechRecognition);

  jobject ret =
      env->CallStaticObjectMethod(org_chromium_content_browser_SpeechRecognitionImpl_clazz(env),
          method_id, nativeSpeechRecognizerImplAndroid);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_SpeechRecognitionImpl_startRecognition = 0;
static void Java_SpeechRecognitionImpl_startRecognition(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, const base::android::JavaRef<jstring>& language,
    jboolean continuous,
    jboolean interimResults) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_SpeechRecognitionImpl_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_SpeechRecognitionImpl_clazz(env),
          "startRecognition",
          "(Ljava/lang/String;ZZ)V",
          &g_org_chromium_content_browser_SpeechRecognitionImpl_startRecognition);

     env->CallVoidMethod(obj.obj(),
          method_id, language.obj(), continuous, interimResults);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_SpeechRecognitionImpl_abortRecognition = 0;
static void Java_SpeechRecognitionImpl_abortRecognition(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_SpeechRecognitionImpl_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_SpeechRecognitionImpl_clazz(env),
          "abortRecognition",
          "()V",
          &g_org_chromium_content_browser_SpeechRecognitionImpl_abortRecognition);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_org_chromium_content_browser_SpeechRecognitionImpl_stopRecognition
    = 0;
static void Java_SpeechRecognitionImpl_stopRecognition(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_SpeechRecognitionImpl_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_SpeechRecognitionImpl_clazz(env),
          "stopRecognition",
          "()V",
          &g_org_chromium_content_browser_SpeechRecognitionImpl_stopRecognition);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
}

}  // namespace content

#endif  // org_chromium_content_browser_SpeechRecognitionImpl_JNI
