// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/input/TextSuggestionHost

#ifndef org_chromium_content_browser_input_TextSuggestionHost_JNI
#define org_chromium_content_browser_input_TextSuggestionHost_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_input_TextSuggestionHost[];
const char kClassPath_org_chromium_content_browser_input_TextSuggestionHost[] =
    "org/chromium/content/browser/input/TextSuggestionHost";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_content_browser_input_TextSuggestionHost_clazz = 0;
#ifndef org_chromium_content_browser_input_TextSuggestionHost_clazz_defined
#define org_chromium_content_browser_input_TextSuggestionHost_clazz_defined
inline jclass org_chromium_content_browser_input_TextSuggestionHost_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_browser_input_TextSuggestionHost,
      &g_org_chromium_content_browser_input_TextSuggestionHost_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

static jlong JNI_TextSuggestionHost_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_org_chromium_content_browser_input_TextSuggestionHost_nativeInit(
    JNIEnv* env,
    jobject jcaller,
    jobject webContents) {
  return JNI_TextSuggestionHost_Init(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplySpellCheckSuggestion(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeTextSuggestionHostAndroid,
    jstring suggestion) {
  TextSuggestionHostAndroid* native =
      reinterpret_cast<TextSuggestionHostAndroid*>(nativeTextSuggestionHostAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ApplySpellCheckSuggestion");
  return native->ApplySpellCheckSuggestion(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, suggestion));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_input_TextSuggestionHost_nativeApplyTextSuggestion(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeTextSuggestionHostAndroid,
    jint markerTag,
    jint suggestionIndex) {
  TextSuggestionHostAndroid* native =
      reinterpret_cast<TextSuggestionHostAndroid*>(nativeTextSuggestionHostAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "ApplyTextSuggestion");
  return native->ApplyTextSuggestion(env, base::android::JavaParamRef<jobject>(env, jcaller),
      markerTag, suggestionIndex);
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_input_TextSuggestionHost_nativeDeleteActiveSuggestionRange(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeTextSuggestionHostAndroid) {
  TextSuggestionHostAndroid* native =
      reinterpret_cast<TextSuggestionHostAndroid*>(nativeTextSuggestionHostAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "DeleteActiveSuggestionRange");
  return native->DeleteActiveSuggestionRange(env, base::android::JavaParamRef<jobject>(env,
      jcaller));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnNewWordAddedToDictionary(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeTextSuggestionHostAndroid,
    jstring word) {
  TextSuggestionHostAndroid* native =
      reinterpret_cast<TextSuggestionHostAndroid*>(nativeTextSuggestionHostAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnNewWordAddedToDictionary");
  return native->OnNewWordAddedToDictionary(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jstring>(env, word));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_input_TextSuggestionHost_nativeOnSuggestionMenuClosed(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeTextSuggestionHostAndroid) {
  TextSuggestionHostAndroid* native =
      reinterpret_cast<TextSuggestionHostAndroid*>(nativeTextSuggestionHostAndroid);
  CHECK_NATIVE_PTR(env, jcaller, native, "OnSuggestionMenuClosed");
  return native->OnSuggestionMenuClosed(env, base::android::JavaParamRef<jobject>(env, jcaller));
}


static base::subtle::AtomicWord
    g_org_chromium_content_browser_input_TextSuggestionHost_showSpellCheckSuggestionMenu = 0;
static void Java_TextSuggestionHost_showSpellCheckSuggestionMenu(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jdouble caretXPx,
    jdouble caretYPx,
    const base::android::JavaRef<jstring>& markedText,
    const base::android::JavaRef<jobjectArray>& suggestions) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_input_TextSuggestionHost_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_input_TextSuggestionHost_clazz(env),
          "showSpellCheckSuggestionMenu",
          "(DDLjava/lang/String;[Ljava/lang/String;)V",
          &g_org_chromium_content_browser_input_TextSuggestionHost_showSpellCheckSuggestionMenu);

     env->CallVoidMethod(obj.obj(),
          method_id, caretXPx, caretYPx, markedText.obj(), suggestions.obj());
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_input_TextSuggestionHost_showTextSuggestionMenu = 0;
static void Java_TextSuggestionHost_showTextSuggestionMenu(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, jdouble caretXPx,
    jdouble caretYPx,
    const base::android::JavaRef<jstring>& markedText,
    const base::android::JavaRef<jobjectArray>& suggestions) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_input_TextSuggestionHost_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_input_TextSuggestionHost_clazz(env),
          "showTextSuggestionMenu",
          "(DDLjava/lang/String;[Lorg/chromium/content/browser/input/SuggestionInfo;)V",
          &g_org_chromium_content_browser_input_TextSuggestionHost_showTextSuggestionMenu);

     env->CallVoidMethod(obj.obj(),
          method_id, caretXPx, caretYPx, markedText.obj(), suggestions.obj());
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_org_chromium_content_browser_input_TextSuggestionHost_hidePopups =
    0;
static void Java_TextSuggestionHost_hidePopups(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_input_TextSuggestionHost_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_input_TextSuggestionHost_clazz(env),
          "hidePopups",
          "()V",
          &g_org_chromium_content_browser_input_TextSuggestionHost_hidePopups);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_org_chromium_content_browser_input_TextSuggestionHost_destroy = 0;
static void Java_TextSuggestionHost_destroy(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_input_TextSuggestionHost_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_input_TextSuggestionHost_clazz(env),
          "destroy",
          "()V",
          &g_org_chromium_content_browser_input_TextSuggestionHost_destroy);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
}

}  // namespace content

#endif  // org_chromium_content_browser_input_TextSuggestionHost_JNI
