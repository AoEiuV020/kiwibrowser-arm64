// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/TapDisambiguator

#ifndef org_chromium_content_browser_TapDisambiguator_JNI
#define org_chromium_content_browser_TapDisambiguator_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_TapDisambiguator[];
const char kClassPath_org_chromium_content_browser_TapDisambiguator[] =
    "org/chromium/content/browser/TapDisambiguator";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_content_browser_TapDisambiguator_clazz = 0;
#ifndef org_chromium_content_browser_TapDisambiguator_clazz_defined
#define org_chromium_content_browser_TapDisambiguator_clazz_defined
inline jclass org_chromium_content_browser_TapDisambiguator_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_content_browser_TapDisambiguator,
      &g_org_chromium_content_browser_TapDisambiguator_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {

static jlong JNI_TapDisambiguator_Init(JNIEnv* env, const base::android::JavaParamRef<jobject>&
    jcaller,
    const base::android::JavaParamRef<jobject>& webContents);

JNI_GENERATOR_EXPORT jlong Java_org_chromium_content_browser_TapDisambiguator_nativeInit(
    JNIEnv* env,
    jobject jcaller,
    jobject webContents) {
  return JNI_TapDisambiguator_Init(env, base::android::JavaParamRef<jobject>(env, jcaller),
      base::android::JavaParamRef<jobject>(env, webContents));
}

JNI_GENERATOR_EXPORT void
    Java_org_chromium_content_browser_TapDisambiguator_nativeResolveTapDisambiguation(
    JNIEnv* env,
    jobject jcaller,
    jlong nativeTapDisambiguator,
    jlong timeMs,
    jfloat x,
    jfloat y,
    jboolean isLongPress) {
  TapDisambiguator* native = reinterpret_cast<TapDisambiguator*>(nativeTapDisambiguator);
  CHECK_NATIVE_PTR(env, jcaller, native, "ResolveTapDisambiguation");
  return native->ResolveTapDisambiguation(env, base::android::JavaParamRef<jobject>(env, jcaller),
      timeMs, x, y, isLongPress);
}


static base::subtle::AtomicWord g_org_chromium_content_browser_TapDisambiguator_destroy = 0;
static void Java_TapDisambiguator_destroy(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_TapDisambiguator_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_TapDisambiguator_clazz(env),
          "destroy",
          "()V",
          &g_org_chromium_content_browser_TapDisambiguator_destroy);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_org_chromium_content_browser_TapDisambiguator_showPopup = 0;
static void Java_TapDisambiguator_showPopup(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    const base::android::JavaRef<jobject>& targetRect,
    const base::android::JavaRef<jobject>& zoomedBitmap) {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_TapDisambiguator_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_TapDisambiguator_clazz(env),
          "showPopup",
          "(Landroid/graphics/Rect;Landroid/graphics/Bitmap;)V",
          &g_org_chromium_content_browser_TapDisambiguator_showPopup);

     env->CallVoidMethod(obj.obj(),
          method_id, targetRect.obj(), zoomedBitmap.obj());
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_org_chromium_content_browser_TapDisambiguator_hidePopup = 0;
static void Java_TapDisambiguator_hidePopup(JNIEnv* env, const base::android::JavaRef<jobject>& obj)
    {
  CHECK_CLAZZ(env, obj.obj(),
      org_chromium_content_browser_TapDisambiguator_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
          env, org_chromium_content_browser_TapDisambiguator_clazz(env),
          "hidePopup",
          "()V",
          &g_org_chromium_content_browser_TapDisambiguator_hidePopup);

     env->CallVoidMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord g_org_chromium_content_browser_TapDisambiguator_createRect = 0;
static base::android::ScopedJavaLocalRef<jobject> Java_TapDisambiguator_createRect(JNIEnv* env,
    JniIntWrapper x,
    JniIntWrapper y,
    JniIntWrapper right,
    JniIntWrapper bottom) {
  CHECK_CLAZZ(env, org_chromium_content_browser_TapDisambiguator_clazz(env),
      org_chromium_content_browser_TapDisambiguator_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_TapDisambiguator_clazz(env),
          "createRect",
          "(IIII)Landroid/graphics/Rect;",
          &g_org_chromium_content_browser_TapDisambiguator_createRect);

  jobject ret =
      env->CallStaticObjectMethod(org_chromium_content_browser_TapDisambiguator_clazz(env),
          method_id, as_jint(x), as_jint(y), as_jint(right), as_jint(bottom));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

}  // namespace content

#endif  // org_chromium_content_browser_TapDisambiguator_JNI
