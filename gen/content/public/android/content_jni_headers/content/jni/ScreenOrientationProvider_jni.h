// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/ScreenOrientationProvider

#ifndef org_chromium_content_browser_ScreenOrientationProvider_JNI
#define org_chromium_content_browser_ScreenOrientationProvider_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_ScreenOrientationProvider[];
const char kClassPath_org_chromium_content_browser_ScreenOrientationProvider[] =
    "org/chromium/content/browser/ScreenOrientationProvider";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_content_browser_ScreenOrientationProvider_clazz = 0;
#ifndef org_chromium_content_browser_ScreenOrientationProvider_clazz_defined
#define org_chromium_content_browser_ScreenOrientationProvider_clazz_defined
inline jclass org_chromium_content_browser_ScreenOrientationProvider_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_browser_ScreenOrientationProvider,
      &g_org_chromium_content_browser_ScreenOrientationProvider_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace content {


static base::subtle::AtomicWord
    g_org_chromium_content_browser_ScreenOrientationProvider_lockOrientation = 0;
static void Java_ScreenOrientationProvider_lockOrientation(JNIEnv* env, const
    base::android::JavaRef<jobject>& window,
    jbyte webScreenOrientation) {
  CHECK_CLAZZ(env, org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
      org_chromium_content_browser_ScreenOrientationProvider_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
          "lockOrientation",
          "(Lorg/chromium/ui/base/WindowAndroid;B)V",
          &g_org_chromium_content_browser_ScreenOrientationProvider_lockOrientation);

     env->CallStaticVoidMethod(org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
          method_id, window.obj(), webScreenOrientation);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_ScreenOrientationProvider_unlockOrientation = 0;
static void Java_ScreenOrientationProvider_unlockOrientation(JNIEnv* env, const
    base::android::JavaRef<jobject>& window) {
  CHECK_CLAZZ(env, org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
      org_chromium_content_browser_ScreenOrientationProvider_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
          "unlockOrientation",
          "(Lorg/chromium/ui/base/WindowAndroid;)V",
          &g_org_chromium_content_browser_ScreenOrientationProvider_unlockOrientation);

     env->CallStaticVoidMethod(org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
          method_id, window.obj());
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_ScreenOrientationProvider_isOrientationLockEnabled = 0;
static jboolean Java_ScreenOrientationProvider_isOrientationLockEnabled(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
      org_chromium_content_browser_ScreenOrientationProvider_clazz(env), false);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
          "isOrientationLockEnabled",
          "()Z",
          &g_org_chromium_content_browser_ScreenOrientationProvider_isOrientationLockEnabled);

  jboolean ret =
env->CallStaticBooleanMethod(org_chromium_content_browser_ScreenOrientationProvider_clazz(env),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

}  // namespace content

#endif  // org_chromium_content_browser_ScreenOrientationProvider_JNI
