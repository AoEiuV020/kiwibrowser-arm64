// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/content/browser/input/SuggestionInfo

#ifndef org_chromium_content_browser_input_SuggestionInfo_JNI
#define org_chromium_content_browser_input_SuggestionInfo_JNI

#include <jni.h>

#include "../../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_content_browser_input_SuggestionInfo[];
const char kClassPath_org_chromium_content_browser_input_SuggestionInfo[] =
    "org/chromium/content/browser/input/SuggestionInfo";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_content_browser_input_SuggestionInfo_clazz = 0;
#ifndef org_chromium_content_browser_input_SuggestionInfo_clazz_defined
#define org_chromium_content_browser_input_SuggestionInfo_clazz_defined
inline jclass org_chromium_content_browser_input_SuggestionInfo_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_content_browser_input_SuggestionInfo,
      &g_org_chromium_content_browser_input_SuggestionInfo_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static base::subtle::AtomicWord g_org_chromium_content_browser_input_SuggestionInfo_createArray = 0;
static base::android::ScopedJavaLocalRef<jobjectArray> Java_SuggestionInfo_createArray(JNIEnv* env,
    JniIntWrapper length) {
  CHECK_CLAZZ(env, org_chromium_content_browser_input_SuggestionInfo_clazz(env),
      org_chromium_content_browser_input_SuggestionInfo_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_input_SuggestionInfo_clazz(env),
          "createArray",
          "(I)[Lorg/chromium/content/browser/input/SuggestionInfo;",
          &g_org_chromium_content_browser_input_SuggestionInfo_createArray);

  jobjectArray ret =
static_cast<jobjectArray>(env->CallStaticObjectMethod(org_chromium_content_browser_input_SuggestionInfo_clazz(env),
          method_id, as_jint(length)));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobjectArray>(env, ret);
}

static base::subtle::AtomicWord
    g_org_chromium_content_browser_input_SuggestionInfo_createSuggestionInfoAndPutInArray = 0;
static void Java_SuggestionInfo_createSuggestionInfoAndPutInArray(JNIEnv* env, const
    base::android::JavaRef<jobjectArray>& suggestionInfos,
    JniIntWrapper index,
    JniIntWrapper markerTag,
    JniIntWrapper suggestionIndex,
    const base::android::JavaRef<jstring>& prefix,
    const base::android::JavaRef<jstring>& suggestion,
    const base::android::JavaRef<jstring>& suffix) {
  CHECK_CLAZZ(env, org_chromium_content_browser_input_SuggestionInfo_clazz(env),
      org_chromium_content_browser_input_SuggestionInfo_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_content_browser_input_SuggestionInfo_clazz(env),
          "createSuggestionInfoAndPutInArray",
"([Lorg/chromium/content/browser/input/SuggestionInfo;IIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
          &g_org_chromium_content_browser_input_SuggestionInfo_createSuggestionInfoAndPutInArray);

     env->CallStaticVoidMethod(org_chromium_content_browser_input_SuggestionInfo_clazz(env),
          method_id, suggestionInfos.obj(), as_jint(index), as_jint(markerTag),
              as_jint(suggestionIndex), prefix.obj(), suggestion.obj(), suffix.obj());
  jni_generator::CheckException(env);
}

#endif  // org_chromium_content_browser_input_SuggestionInfo_JNI
