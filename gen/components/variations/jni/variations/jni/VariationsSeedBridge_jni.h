// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/components/variations/firstrun/VariationsSeedBridge

#ifndef org_chromium_components_variations_firstrun_VariationsSeedBridge_JNI
#define org_chromium_components_variations_firstrun_VariationsSeedBridge_JNI

#include <jni.h>

#include "../../../../../../../../base/android/jni_generator/jni_generator_helper.h"


// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_components_variations_firstrun_VariationsSeedBridge[];
const char kClassPath_org_chromium_components_variations_firstrun_VariationsSeedBridge[] =
    "org/chromium/components/variations/firstrun/VariationsSeedBridge";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz = 0;
#ifndef org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz_defined
#define org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz_defined
inline jclass org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_components_variations_firstrun_VariationsSeedBridge,
      &g_org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_setVariationsFirstRunSeed =
    0;
static void Java_VariationsSeedBridge_setVariationsFirstRunSeed(JNIEnv* env, const
    base::android::JavaRef<jbyteArray>& rawSeed,
    const base::android::JavaRef<jstring>& signature,
    const base::android::JavaRef<jstring>& country,
    const base::android::JavaRef<jstring>& date,
    jboolean isGzipCompressed) {
  CHECK_CLAZZ(env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
      org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          "setVariationsFirstRunSeed",
          "([BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V",
&g_org_chromium_components_variations_firstrun_VariationsSeedBridge_setVariationsFirstRunSeed);

env->CallStaticVoidMethod(org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          method_id, rawSeed.obj(), signature.obj(), country.obj(), date.obj(), isGzipCompressed);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_clearFirstRunPrefs = 0;
static void Java_VariationsSeedBridge_clearFirstRunPrefs(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
      org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          "clearFirstRunPrefs",
          "()V",
          &g_org_chromium_components_variations_firstrun_VariationsSeedBridge_clearFirstRunPrefs);

env->CallStaticVoidMethod(org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          method_id);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_markVariationsSeedAsStored =
    0;
static void Java_VariationsSeedBridge_markVariationsSeedAsStored(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
      org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env));
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          "markVariationsSeedAsStored",
          "()V",
&g_org_chromium_components_variations_firstrun_VariationsSeedBridge_markVariationsSeedAsStored);

env->CallStaticVoidMethod(org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          method_id);
  jni_generator::CheckException(env);
}

static base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedData
    = 0;
static base::android::ScopedJavaLocalRef<jbyteArray>
    Java_VariationsSeedBridge_getVariationsFirstRunSeedData(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
      org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          "getVariationsFirstRunSeedData",
          "()[B",
&g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedData);

  jbyteArray ret =
static_cast<jbyteArray>(env->CallStaticObjectMethod(org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jbyteArray>(env, ret);
}

static base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedSignature
    = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_VariationsSeedBridge_getVariationsFirstRunSeedSignature(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
      org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          "getVariationsFirstRunSeedSignature",
          "()Ljava/lang/String;",
&g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedSignature);

  jstring ret =
static_cast<jstring>(env->CallStaticObjectMethod(org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedCountry
    = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_VariationsSeedBridge_getVariationsFirstRunSeedCountry(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
      org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          "getVariationsFirstRunSeedCountry",
          "()Ljava/lang/String;",
&g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedCountry);

  jstring ret =
static_cast<jstring>(env->CallStaticObjectMethod(org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedDate
    = 0;
static base::android::ScopedJavaLocalRef<jstring>
    Java_VariationsSeedBridge_getVariationsFirstRunSeedDate(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
      org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env), NULL);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          "getVariationsFirstRunSeedDate",
          "()Ljava/lang/String;",
&g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedDate);

  jstring ret =
static_cast<jstring>(env->CallStaticObjectMethod(org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          method_id));
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static base::subtle::AtomicWord
    g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedIsGzipCompressed
    = 0;
static jboolean Java_VariationsSeedBridge_getVariationsFirstRunSeedIsGzipCompressed(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
      org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env), false);
  jmethodID method_id = base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
          env, org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          "getVariationsFirstRunSeedIsGzipCompressed",
          "()Z",
&g_org_chromium_components_variations_firstrun_VariationsSeedBridge_getVariationsFirstRunSeedIsGzipCompressed);

  jboolean ret =
env->CallStaticBooleanMethod(org_chromium_components_variations_firstrun_VariationsSeedBridge_clazz(env),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

#endif  // org_chromium_components_variations_firstrun_VariationsSeedBridge_JNI
